name: 构建主线linux系统

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: 环境检查
      uses: actions/checkout@main

    - name: 安装构建环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install binfmt-support qemu-user-static gcc-10-aarch64-linux-gnu kernel-package fakeroot simg2img img2simg mkbootimg bison flex gcc-aarch64-linux-gnu pkg-config libncurses-dev libssl-dev unzip git device-tree-compiler

    - name: 下载主线内核源码
      run: |
        cd $GITHUB_WORKSPACE
        git clone  https://github.com/OpenStick/linux.git --depth 1


    - name: 连接云编译-SSH-修改内核配置
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 开始编译内核
      run: |
        cd $GITHUB_WORKSPACE
        cd linux
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        make msm8916_defconfig
        make deb-pkg -j8

    - name: 使用预构建rootfs生成系统镜像
      run: |
        cd $GITHUB_WORKSPACE
        export ARCH=x86
        wget https://github.com/OpenStick/OpenStick/releases/download/v1/debian.zip && unzip debian.zip
        mv debian/rootfs.img ./
        rm -rf debian.zip
        rm -rf debian/*
        sudo simg2img rootfs.img root.img
        sudo rm -rf rootfs.img
        ls
        sudo mount root.img debian
        sudo mount --bind /proc debian/proc 
        sudo mount --bind /dev debian/dev
        sudo mount --bind /dev/pts debian/dev/pts
        sudo mount --bind /sys debian/sys
        sudo cp -a *.deb debian/
        ls
        ls debian/
        ls debian/boot
        ls debian/sys
        ls debian/dev
        sudo chroot debian
        dpkg -l | grep -E "linux-headers|linux-image" |awk '{print $2}'|xargs dpkg -P
        apt install *.deb
        rm *.deb
        exit
        sudo cp -a debian/boot/initrd* ./initrd.img
        sudo umount debian/proc 
        sudo umount debian/dev/pts
        sudo umount debian/dev
        sudo umount debian/sys
        sudo umount debian
        sudo img2simg root.img rootfs.img
        sleep 120

    - name: 构建boot内核映像
      if: (!cancelled())
      run: |
       cd $GITHUB_WORKSPACE
       wget https://github.com/wu17481748/Cloud_Action-mainline-linux/releases/download/%E8%84%9A%E6%9C%AC/boot.sh
       sudo cp -a linux/arch/arm64/boot/dts/qcom/*ufi*.dtb ./
       sudo cp -a linux/arch/arm64/boot/Image.gz ./
       sudo chmod 777 boot.sh
       ./boot.sh
       ls boot
      

    - name: 上传rootfs系统镜像
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: linux
        path: $GITHUB_WORKSPACE/rootfs.img
      

    - name: 上传boot内核镜像
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: boot
        path: $GITHUB_WORKSPACE/boot

